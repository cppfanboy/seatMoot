events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Upstream definitions for load balancing
    upstream edge_servers {
        ip_hash;  # Sticky sessions for WebSocket connections
        server host.docker.internal:3000;
        server host.docker.internal:3001;
    }
    
    upstream booking_api {
        server host.docker.internal:8080;
    }
    
    server {
        listen 80;
        server_name localhost;
        
        # Frontend files
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        # WebSocket endpoint with load balancing
        location /ws {
            proxy_pass http://edge_servers;
            proxy_http_version 1.1;
            
            # WebSocket headers
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts for long-lived connections
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 10s;
            
            # Disable buffering for WebSocket
            proxy_buffering off;
        }
        
        # Booking API endpoints
        location /api {
            proxy_pass http://booking_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Standard timeouts for API calls
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Health check endpoint for NGINX
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Edge server stats (load balanced)
        location /stats {
            proxy_pass http://edge_servers/stats;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Booking service health
        location /health {
            proxy_pass http://booking_api/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
}